default_platform(:ios)

platform :ios do
  desc "Run tests"
  lane :test do
    scan
  end

  # Match
  desc "Setup development certificates"
  lane :setup_development_certificates do
    match(
      type: "development",
    )
  end

  desc "Setup adhoc certificates"
  lane :setup_adhoc_certificates do
    match(
      type: "adhoc",
    )
  end

  desc "Setup AppStore certificates"
  lane :setup_appstore_certificates do
    match(
      type: "appstore",
    )
  end

  # Gym
  desc "Gym for adhoc"
  lane :adhoc do
    setup_adhoc_certificates

    gym(
      export_method: "ad-hoc",
      xcargs: "PROVISIONING_PROFILE_SPECIFIER='match AdHoc moe.nnsnodnb.WebSocketClient' MARKETING_VERSION='#{generate_version_name}'",
    )

    if is_ci
      firebase_app_distribution(
        app: "1:89035443908:ios:2b6115971af3118435c391",
        ipa_path: "Products/WebSocketClient.ipa",
        groups: "owner",
      )
    end
  end

  desc "Gym for appstore"
  lane :release do
    setup_appstore_certificates

    gym(
      export_method: "app-store",
    )
  end

  desc "Generate version name"
  private_lane :generate_version_name do
    version = get_xcconfig_value(
      path: "Configurations/App/App.base.xcconfig",
      name: "MARKETING_VERSION",
    )
    short_hash = last_git_commit[:abbreviated_commit_hash]
    "#{version}-#{short_hash}"
  end
end
